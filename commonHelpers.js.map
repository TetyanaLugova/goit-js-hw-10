{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst inputRef = document.querySelector(\"#datetime-picker\");\nconst btnRef = document.querySelector(\"button\");\nconst timerRef=document.querySelectorAll(\".value\")\n\nbtnRef.disabled = true;\n\nlet userSelectedDate;\nlet interval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        interval = userSelectedDate - options.defaultDate;\n        if (interval < 1) {\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future',\n            });\n        }\n        else {\n            btnRef.disabled = false;\n            inputRef.disabled = true;\n        }\n      console.log(selectedDates[0]);\n  },\n};\n\nconst calendar =  flatpickr(\"#datetime-picker\", options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0'); \n};\n\nbtnRef.addEventListener('click', (event) => {\n    btnRef.disabled = true;\n   const timerRepeat = setInterval(() => {\n    interval = userSelectedDate - new Date();\n       if (interval < 1) {\n      clearInterval(timerRepeat);\n      return;\n    }\n    \n    const { days, hours, minutes, seconds } = convertMs(interval);\n       \n    timerRef[0].textContent = addLeadingZero(days);\n    timerRef[1].textContent = addLeadingZero(hours);\n    timerRef[2].textContent = addLeadingZero(minutes);\n    timerRef[3].textContent = addLeadingZero(seconds);\n  }, 1000);\n});"],"names":["inputRef","btnRef","timerRef","userSelectedDate","interval","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","event","timerRepeat"],"mappings":"2GAMA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAS,SAAS,iBAAiB,QAAQ,EAEjDD,EAAO,SAAW,GAElB,IAAIE,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACf,QAAQC,EAAe,CACnBH,EAAmBG,EAAc,CAAC,EAClCF,EAAWD,EAAmBE,EAAQ,YAClCD,EAAW,EACXG,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACzB,CAAa,GAGDN,EAAO,SAAW,GAClBD,EAAS,SAAW,IAE1B,QAAQ,IAAIM,EAAc,CAAC,CAAC,CAC/B,CACH,EAEkBE,EAAU,mBAAoBH,CAAO,EAEvD,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAE/B,SAASM,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC,CAEAf,EAAO,iBAAiB,QAAUgB,GAAU,CACxChB,EAAO,SAAW,GACnB,MAAMiB,EAAc,YAAY,IAAM,CAElC,GADHd,EAAWD,EAAmB,IAAI,KAC3BC,EAAW,EAAG,CACnB,cAAcc,CAAW,EACzB,MACD,CAED,KAAM,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUL,CAAQ,EAE5DF,EAAS,CAAC,EAAE,YAAca,EAAeJ,CAAI,EAC7CT,EAAS,CAAC,EAAE,YAAca,EAAeH,CAAK,EAC9CV,EAAS,CAAC,EAAE,YAAca,EAAeF,CAAO,EAChDX,EAAS,CAAC,EAAE,YAAca,EAAeD,CAAO,CACjD,EAAE,GAAI,CACT,CAAC"}